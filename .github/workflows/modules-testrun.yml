name: Module Test Run

on:
  workflow_dispatch:
    inputs:
      module_name:
        description: 'Specific module to test (leave empty to test all modules)'
        required: false
        type: string
        default: ''
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - 'modules/**/*.wdl'
      - 'modules/**/*.json'
      - '.github/workflows/modules-testrun.yml'

permissions:
  contents: read

jobs:
  discover-modules:
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.find-modules.outputs.modules }}
    steps:
    -
      name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Need full history for git diff
    -
      name: Find modified WDL modules
      id: find-modules
      run: python3 .github/scripts/discover_modules.py "${{ github.event.inputs.module_name }}"

  miniwdl-test:
    needs: [discover-modules]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ${{ fromJson(needs.discover-modules.outputs.modules) }}
      fail-fast: false
    steps:
    -
      name: Checkout
      uses: actions/checkout@v4
    -
      name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.13
    -
      name: Install miniwdl
      run: |
        python -m pip install --upgrade pip
        pip3 install miniwdl
    -
      name: Run workflow with miniwdl
      run: |
        module_dir="modules/${{ matrix.module }}"
        wdl_file="$module_dir/${{ matrix.module }}.wdl"
        echo "Running ${{ matrix.module }} with miniwdl..."
        miniwdl run "$wdl_file"

  cromwell-test:
    needs: [discover-modules]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ${{ fromJson(needs.discover-modules.outputs.modules) }}
      fail-fast: false
    steps:
    -
      name: Checkout
      uses: actions/checkout@v4
    -
      name: Set Up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
    -
      name: Download Cromwell
      run: |
        wget -q https://github.com/broadinstitute/cromwell/releases/download/86/cromwell-86.jar
    -
      name: Run workflow with Cromwell
      run: |
        module_dir="modules/${{ matrix.module }}"
        wdl_file="$module_dir/${{ matrix.module }}.wdl"
        echo "Running ${{ matrix.module }} with Cromwell..."
        java -jar cromwell-86.jar run "$wdl_file"

  sprocket-test:
    needs: [discover-modules]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ${{ fromJson(needs.discover-modules.outputs.modules) }}
      fail-fast: false
    steps:
    -
      name: Checkout
      uses: actions/checkout@v4
    -
      name: Set Up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    -
      name: Install cargo-binstall
      run: curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
    -
      name: Install Sprocket
      run: |
        cargo-binstall sprocket --version 0.15.0 -y
        cargo install --git https://github.com/getwilds/wdlparse --tag v0.0.5
    -
      name: Run workflow with Sprocket
      run: |
        module_dir="modules/${{ matrix.module }}"
        wdl_file="$module_dir/${{ matrix.module }}.wdl"
        # Convert ww-module-name to module_name_example
        entrypoint=$(wdlparse parse --format json "$wdl_file" | jq -r '.wdl.workflows[].name')
        echo "Running ${{ matrix.module }} with Sprocket using entrypoint: $entrypoint"
        sprocket run "$wdl_file" --entrypoint "$entrypoint"
