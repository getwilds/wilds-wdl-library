name: WDL Workflow Test Run

on:
  workflow_dispatch:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - '**.wdl'
      - '.github/workflows/testrun.yml'

permissions:
  contents: read

jobs:
  download-test-data:
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v4
    - 
      name: Download test data
      run: |
        mkdir -p test-data

        # Download chromosome 22 fasta
        wget -q -O test-data/chr22.fa.gz http://hgdownload.soe.ucsc.edu/goldenPath/hg38/chromosomes/chr22.fa.gz
        gunzip test-data/chr22.fa.gz

        # Download chromosome 22 GTF file
        wget -q -O test-data/hg38.ncbiRefSeq.gtf.gz http://hgdownload.soe.ucsc.edu/goldenPath/hg38/bigZips/genes/hg38.ncbiRefSeq.gtf.gz
        gunzip test-data/hg38.ncbiRefSeq.gtf.gz
        # Extract only chromosome 22 annotations
        grep "^chr22[[:space:]]" test-data/hg38.ncbiRefSeq.gtf > test-data/chr22.gtf
        rm test-data/hg38.ncbiRefSeq.gtf
        
        # Download a specific version (3.1.1) of the SRA toolkit
        wget -q https://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/3.1.1/sratoolkit.3.1.1-ubuntu64.tar.gz
        tar -xzf sratoolkit.3.1.1-ubuntu64.tar.gz
        echo "$PWD/sratoolkit.3.1.1-ubuntu64/bin" >> $GITHUB_PATH
        export PATH="$PWD/sratoolkit.3.1.1-ubuntu64/bin:$PATH"
        
        # Download a small test RNA-seq sample (SRR13008264 - mouse RNA-seq, ~100MB)
        fasterq-dump --split-files SRR13008264
        gzip SRR13008264_1.fastq SRR13008264_2.fastq
        ls -la test-data/
    - 
      name: Upload test data
      uses: actions/upload-artifact@v4
      with:
        name: test-data
        path: test-data/
        retention-days: 1

  miniwdl-test:
    needs: download-test-data
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v4
    - 
      name: Download test data
      uses: actions/download-artifact@v4
      with:
        name: test-data
        path: test-data/
    - 
      name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.13
    - 
      name: Install miniwdl
      run: |
        python -m pip install --upgrade pip
        pip3 install miniwdl
    - 
      name: Run workflow with miniwdl
      run: |
        mkdir -p test-output/miniwdl
        miniwdl run modules/ww-sra/ww-sra.wdl -i modules/ww-sra/inputs.json --dir test-output/miniwdl
    - 
      name: Display validation report
      run: |
        echo "=== MiniWDL Validation Report ==="
        find test-output/miniwdl -name "validation_report.txt" -exec cat {} \;
  
  cromwell-test:
    needs: download-test-data
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v4
    - 
      name: Download test data
      uses: actions/download-artifact@v4
      with:
        name: test-data
        path: test-data/
    - 
      name: Set Up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
    - 
      name: Download Cromwell
      run: |
        wget -q https://github.com/broadinstitute/cromwell/releases/download/86/cromwell-86.jar
    - 
      name: Run workflow with Cromwell
      run: |
        mkdir -p test-output/cromwell
        java -jar cromwell-86.jar run modules/ww-sra/ww-sra.wdl -i modules/ww-sra/inputs.json -o modules/ww-sra/options.json
    - 
      name: Display validation report
      run: |
        echo "=== Cromwell Validation Report ==="
        find . -name "validation_report.txt" -exec cat {} \;
  
  sprocket-test:
    needs: download-test-data
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v4
    - 
      name: Download test data
      uses: actions/download-artifact@v4
      with:
        name: test-data
        path: test-data/
    - 
      name: Set Up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - 
      name: Install cargo-binstall
      run: curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
    - 
      name: Install Sprocket
      run: cargo-binstall sprocket --version 0.12.2
    - 
      name: Run workflow with Sprocket
      run: sprocket run --output test-output/sprocket modules/ww-sra/ww-sra.wdl modules/ww-sra/inputs.json
    - 
      name: Display validation report
      run: |
        echo "=== Sprocket Validation Report ==="
        find test-output/sprocket -name "validation_report.txt" -exec cat {} \;
